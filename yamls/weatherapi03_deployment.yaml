apiVersion: apps/v1
kind: Deployment
metadata:
  name: weather-agent-deployment
  namespace: weatherapi
  labels:
    app: weather-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: weather-agent
  template:
    metadata:
      labels:
        app: weather-agent
    spec:
      containers:
      - name: weather-agent
        image: donaldloo/weather-agent:v1.4 # Confirm this is your image name
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef:
            name: weather-agent-secret

        # --- NEW: Resource Management ---
        # This section ensures the pod doesn't use too many cluster resources.
        resources:
          requests:
            # The minimum amount of resources guaranteed for the pod.
            cpu: "100m"      # "m" stands for millicores. 100m is 1/10th of a CPU core.
            memory: "64Mi"   # "Mi" stands for Mebibytes.
          limits:
            # The maximum amount of resources the pod is allowed to use.
            cpu: "250m"      # If it exceeds this, it will be throttled.
            memory: "128Mi"  # If it exceeds this, it will be terminated (OOMKilled).

        # --- NEW: Health Checks ---
        # Kubernetes uses these probes to check if your application is healthy.
        livenessProbe:
          # "Is the application alive?" If this probe fails, Kubernetes will restart the container.
          httpGet:
            path: /docs  
            port: 8000
          initialDelaySeconds: 15 # Wait 15 seconds after container starts before first probe.
          periodSeconds: 20       # Check every 20 seconds.
          timeoutSeconds: 5         # Wait 5 seconds for a response.
          failureThreshold: 3     # Restart after 3 consecutive failures.

        readinessProbe:
          httpGet:
            path: /docs
            port: 8000
          initialDelaySeconds: 10 # Check readiness a bit sooner than liveness.
          periodSeconds: 10       # Check more frequently to quickly add/remove from service.
          timeoutSeconds: 5
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: weather-agent-service
  namespace: weatherapi
spec:
  selector:
    # This selector links the Service to the Pods created by your Deployment
    app: weather-agent
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000